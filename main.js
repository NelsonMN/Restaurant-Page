(()=>{var n={241:(n,t,e)=>{"use strict";e.d(t,{Z:()=>C});var o=e(537),a=e.n(o),r=e(645),A=e.n(r),i=e(667),s=e.n(i),c=new URL(e(509),e.b),d=new URL(e(798),e.b),u=new URL(e(122),e.b),l=A()(a()),p=s()(c),f=s()(d),m=s()(u);l.push([n.id,"/* Fonts */\n\n@font-face {\n    font-family: 'GreatVibes';\n    src: url("+p+") format('truetype');\n}\n\n@font-face {\n    font-family: 'Kanit';\n    src: url("+f+") format('truetype');\n}\n\n\n/* Main */\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\n:root {\n    --menu-color: rgba(65, 101, 97, 0.85);\n    --main-text: beige;\n}\n\nbody {\n    background-image: url("+m+");\n    background-attachment: fixed;\n    overflow: auto;\n}\n\na {\n    text-decoration: none;\n    color: inherit;\n    transition: transform .4s\n}\n\n.content{\n    display: flex;\n    flex-direction: column;\n}\n\n/* Buttons */\n\nbutton {\n    background: none;\n\tcolor: inherit;\n\tborder: none;\n\tfont: inherit;\n\tcursor: pointer;\n\toutline: inherit;\n    transition: transform .4s\n}\n\nbutton:hover {\n    transform: scale(1.2);\n    transition-duration: .4s;\n}\n\n\n/* Header */\n\n.header {\n    display: flex;\n    flex-direction: column;\n    height: 20vh;\n    max-width: 100vw;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n    background-color: var(--menu-color);\n    color: var(--main-text);\n    font-family: 'Kanit';\n    font-weight: 100;\n    font-size: 28px;\n}\n\n.title {\n    font-family: 'GreatVibes';\n    font-weight: 900;\n    font-size: 75px;\n}\n\n.nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10vw;\n}\n\n\n/* Content */\n\n.main {\n    display: flex;\n    justify-content: center;\n    min-height: 72vh;\n    max-width: 100vw;\n    \n}\n\n/* Home */\n\n.info {\n    animation: fadeIn 3s;\n    -webkit-animation: fadeIn 3s;\n    -moz-animation: fadeIn 3s;\n    -o-animation: fadeIn 3s;\n    -ms-animation: fadeIn 3s;\n  \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 800px;\n    margin: 120px 0;\n    background-color: var(--menu-color);\n    border-radius: 10px;\n    padding: 50px 100px;\n}\n\n/* .info animation */\n@keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-moz-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-webkit-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-o-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-ms-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n\n.about { \n    font-family: 'Kanit';\n    font-size: 24px;\n    color: var(--main-text);\n    text-align: center;\n}\n\n.soup {\n    margin: 30px 0;\n    height: 50%;\n    width: 80%;\n    border-radius: 10px;\n    align-self: center;\n}\n\n/* Menu */\n\n.food-titles {\n    color: var(--main-text);\n    font-size: 30px;\n    font-family: 'Kanit'\n}\n\n.menu {\n    display: flex;\n    gap: 30px;\n\n}\n\n.food {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    color: var(--main-text);\n    font-family: Kanit;\n    font-size: 20px;\n}\n\n.food-img {\n    width: 60%;\n    height: 150%;\n    border-radius: 10%;\n    padding-bottom: 10px;\n}\n\n.apps {\n    display: flex;\n    padding: 50px 0;\n    flex-direction: column;\n}\n\n.app {\n    margin: 30px 0 \n}\n\n/* Footer */\n\n.footer {\n    margin-top: auto;\n    display: flex;\n    height: 8vh;\n    justify-content: center;\n    align-items: center;\n    max-width: 100vw;\n    background-color: var(--menu-color);\n    color: var(--main-text);\n    font-family: 'Kanit';\n    font-size: 20px;\n}\n\n.footer > a:hover {\n    transform: scale(1.2);\n    transition-duration: .4s;\n}","",{version:3,sources:["webpack://./src/scripts/styles.css"],names:[],mappings:"AAAA,UAAU;;AAEV;IACI,yBAAyB;IACzB,+DAAkE;AACtE;;AAEA;IACI,oBAAoB;IACpB,+DAA6D;AACjE;;;AAGA,SAAS;;AAET;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,qCAAqC;IACrC,kBAAkB;AACtB;;AAEA;IACI,yDAAiD;IACjD,4BAA4B;IAC5B,cAAc;AAClB;;AAEA;IACI,qBAAqB;IACrB,cAAc;IACd;AACJ;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA,YAAY;;AAEZ;IACI,gBAAgB;CACnB,cAAc;CACd,YAAY;CACZ,aAAa;CACb,eAAe;CACf,gBAAgB;IACb;AACJ;;AAEA;IACI,qBAAqB;IACrB,wBAAwB;AAC5B;;;AAGA,WAAW;;AAEX;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,mCAAmC;IACnC,uBAAuB;IACvB,oBAAoB;IACpB,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;;AAGA,YAAY;;AAEZ;IACI,aAAa;IACb,uBAAuB;IACvB,gBAAgB;IAChB,gBAAgB;;AAEpB;;AAEA,SAAS;;AAET;IACI,oBAAoB;IACpB,4BAA4B;IAC5B,yBAAyB;IACzB,uBAAuB;IACvB,wBAAwB;;IAExB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,eAAe;IACf,mCAAmC;IACnC,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,oBAAoB;AACpB;IACI,IAAI,SAAS,CAAC;IACd,MAAM,SAAS,CAAC;EAClB;;EAEA;IACE,IAAI,SAAS,CAAC;IACd,MAAM,SAAS,CAAC;EAClB;;EAEA;IACE,IAAI,SAAS,CAAC;IACd,MAAM,SAAS,CAAC;EAClB;;EAEA;IACE,IAAI,SAAS,CAAC;IACd,MAAM,SAAS,CAAC;EAClB;;EAEA;IACE,IAAI,SAAS,CAAC;IACd,MAAM,SAAS,CAAC;EAClB;;AAEF;IACI,oBAAoB;IACpB,eAAe;IACf,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,UAAU;IACV,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA,SAAS;;AAET;IACI,uBAAuB;IACvB,eAAe;IACf;AACJ;;AAEA;IACI,aAAa;IACb,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,uBAAuB;IACvB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI;AACJ;;AAEA,WAAW;;AAEX;IACI,gBAAgB;IAChB,aAAa;IACb,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;IAChB,mCAAmC;IACnC,uBAAuB;IACvB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,wBAAwB;AAC5B",sourcesContent:["/* Fonts */\n\n@font-face {\n    font-family: 'GreatVibes';\n    src: url(/src/fonts/Great_Vibes/GreatVibes.ttf) format('truetype');\n}\n\n@font-face {\n    font-family: 'Kanit';\n    src: url(/src/fonts/Kanit/Kanit-Light.ttf) format('truetype');\n}\n\n\n/* Main */\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\n:root {\n    --menu-color: rgba(65, 101, 97, 0.85);\n    --main-text: beige;\n}\n\nbody {\n    background-image: url(/src/images/background.jpg);\n    background-attachment: fixed;\n    overflow: auto;\n}\n\na {\n    text-decoration: none;\n    color: inherit;\n    transition: transform .4s\n}\n\n.content{\n    display: flex;\n    flex-direction: column;\n}\n\n/* Buttons */\n\nbutton {\n    background: none;\n\tcolor: inherit;\n\tborder: none;\n\tfont: inherit;\n\tcursor: pointer;\n\toutline: inherit;\n    transition: transform .4s\n}\n\nbutton:hover {\n    transform: scale(1.2);\n    transition-duration: .4s;\n}\n\n\n/* Header */\n\n.header {\n    display: flex;\n    flex-direction: column;\n    height: 20vh;\n    max-width: 100vw;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n    background-color: var(--menu-color);\n    color: var(--main-text);\n    font-family: 'Kanit';\n    font-weight: 100;\n    font-size: 28px;\n}\n\n.title {\n    font-family: 'GreatVibes';\n    font-weight: 900;\n    font-size: 75px;\n}\n\n.nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10vw;\n}\n\n\n/* Content */\n\n.main {\n    display: flex;\n    justify-content: center;\n    min-height: 72vh;\n    max-width: 100vw;\n    \n}\n\n/* Home */\n\n.info {\n    animation: fadeIn 3s;\n    -webkit-animation: fadeIn 3s;\n    -moz-animation: fadeIn 3s;\n    -o-animation: fadeIn 3s;\n    -ms-animation: fadeIn 3s;\n  \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 800px;\n    margin: 120px 0;\n    background-color: var(--menu-color);\n    border-radius: 10px;\n    padding: 50px 100px;\n}\n\n/* .info animation */\n@keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-moz-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-webkit-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-o-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n  \n  @-ms-keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n  }\n\n.about { \n    font-family: 'Kanit';\n    font-size: 24px;\n    color: var(--main-text);\n    text-align: center;\n}\n\n.soup {\n    margin: 30px 0;\n    height: 50%;\n    width: 80%;\n    border-radius: 10px;\n    align-self: center;\n}\n\n/* Menu */\n\n.food-titles {\n    color: var(--main-text);\n    font-size: 30px;\n    font-family: 'Kanit'\n}\n\n.menu {\n    display: flex;\n    gap: 30px;\n\n}\n\n.food {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    color: var(--main-text);\n    font-family: Kanit;\n    font-size: 20px;\n}\n\n.food-img {\n    width: 60%;\n    height: 150%;\n    border-radius: 10%;\n    padding-bottom: 10px;\n}\n\n.apps {\n    display: flex;\n    padding: 50px 0;\n    flex-direction: column;\n}\n\n.app {\n    margin: 30px 0 \n}\n\n/* Footer */\n\n.footer {\n    margin-top: auto;\n    display: flex;\n    height: 8vh;\n    justify-content: center;\n    align-items: center;\n    max-width: 100vw;\n    background-color: var(--menu-color);\n    color: var(--main-text);\n    font-family: 'Kanit';\n    font-size: 20px;\n}\n\n.footer > a:hover {\n    transform: scale(1.2);\n    transition-duration: .4s;\n}"],sourceRoot:""}]);const C=l},645:n=>{"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);o&&A[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),t.push(d))}},t}},667:n=>{"use strict";n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),A=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(A).concat([r]).join("\n")}return[t].join("\n")}},379:n=>{"use strict";var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},A=[],i=0;i<n.length;i++){var s=n[i],c=o.base?s[0]+o.base:s[0],d=r[c]||0,u="".concat(c," ").concat(d);r[c]=d+1;var l=e(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)t[l].references++,t[l].updater(p);else{var f=a(p,o);o.byIndex=i,t.splice(i,0,{identifier:u,updater:f,references:1})}A.push(u)}return A}function a(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var A=0;A<r.length;A++){var i=e(r[A]);t[i].references--}for(var s=o(n,a),c=0;c<r.length;c++){var d=e(r[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=s}}},569:n=>{"use strict";var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{"use strict";n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{"use strict";n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{"use strict";n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,a&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{"use strict";n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},779:()=>{},755:(n,t,e)=>{"use strict";e.d(t,{Z:()=>a});var o=e(809);const a=()=>{document.querySelector(".main").appendChild(function(){const n=document.createElement("div");n.classList.add("info");const t=document.createElement("p");t.classList.add("about"),t.textContent="One of the finest French restaurants in all of North America.";const e=new Image;e.classList.add("soup"),e.src=o;const a=document.createElement("p");return a.classList.add("about"),a.textContent="Inspired by the bistro genre, our menu celebrates timeless French cooking with dishes that celebrate traditional European techniques.",n.append(t),n.append(e),n.append(a),n}())}},200:(n,t,e)=>{"use strict";var o=e(379),a=e.n(o),r=e(795),A=e.n(r),i=e(569),s=e.n(i),c=e(565),d=e.n(c),u=e(216),l=e.n(u),p=e(589),f=e.n(p),m=e(241),C={};C.styleTagTransform=f(),C.setAttributes=d(),C.insert=s().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=l(),a()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var B=e(755),I=e(372),g=e(431),h=e(809),y=e(676),x=e(164),b=e(802);const v=document.querySelector(".content"),E=()=>{const n=document.createElement("div");n.classList.add("main"),v.append(n);const t=document.createElement("div");t.classList.add("menu","info");const e={caesar:I,steak:g,french:h,boeuf:y,coq:x,tagliatelle:b},o=n=>{const e=document.createElement("h2");e.classList.add("food-titles"),e.textContent=n,t.append(e)},a=n=>{const o=document.createElement("div");o.classList.add("food");const a=new Image;a.classList.add("food-img"),a.src=e[n.toLowerCase().split(" ")[0]],a.alt=n;const r=document.createElement("h4");r.textContent=n,t.appendChild(o),o.append(a),o.append(r)};return o("Appetizers"),a("Caesar Salad"),a("Steak Tartare"),a("French Onion Soup"),o("Mains"),a("Boeuf Bourguignon"),a("Coq Au Vin"),a("Tagliatelle"),o("Desserts"),n.append(t),n},w=()=>{document.querySelector(".main").appendChild(E())};v.appendChild((()=>{const n=document.createElement("div");n.classList.add("header");const t=document.createElement("h1");return t.classList.add("title"),t.textContent="Maison Selby",v.appendChild(n),n.appendChild(t),n.append((()=>{const n=document.createElement("div");n.classList.add("nav");const t=document.createElement("button");t.textContent="Home",t.addEventListener("click",(function(){document.querySelector(".main").textContent="",(0,B.Z)()}));const e=document.createElement("button");e.textContent="Menu",e.addEventListener("click",(()=>{document.querySelector(".main").textContent="",w()}));const o=document.createElement("button");return o.textContent="Contact",n.append(t,e,o),n})()),n})()),v.appendChild(E()),v.appendChild((()=>{const n=document.createElement("div");n.classList.add("footer");const t=document.createElement("a");return t.href="https://github.com/NelsonMN",t.textContent="Created By: NelsonMM",n.append(t),v.append(n),n})())},430:()=>{},509:(n,t,e)=>{"use strict";n.exports=e.p+"6d246c3b51d7eb58b13a.ttf"},798:(n,t,e)=>{"use strict";n.exports=e.p+"7b6b95563f4c5697d973.ttf"},676:(n,t,e)=>{"use strict";n.exports=e.p+"60d68fc9774bfbe5e636.jpeg"},372:(n,t,e)=>{"use strict";n.exports=e.p+"11e89a9b10c4a7862e7b.jpeg"},164:(n,t,e)=>{"use strict";n.exports=e.p+"76999069d3c72e79ec65.jpeg"},809:(n,t,e)=>{"use strict";n.exports=e.p+"288c7e84d15f4309bed3.jpeg"},431:(n,t,e)=>{"use strict";n.exports=e.p+"f7642df9086d817ed6eb.jpeg"},802:(n,t,e)=>{"use strict";n.exports=e.p+"77aabb3996a9811e5cfb.jpeg"},122:(n,t,e)=>{"use strict";n.exports=e.p+"7c3366af0c6d2ee6c086.jpg"}},t={};function e(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e(200),e(755),e(430),e(779)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,